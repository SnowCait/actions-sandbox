name: Self workflow

on:
  push:
    paths:
      - .github/workflows/self-workflow.yml
  workflow_dispatch:
    inputs:
      id:
        default: '123'

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 1
    env:
      GH_TOKEN: ${{ github.token }}
      GH_REPO: ${{ github.repository }}

    steps:
      - run: cat $GITHUB_EVENT_PATH
      - run: echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
      - run: printenv
      - run: gh workflow view "$GITHUB_WORKFLOW"
      - run: gh workflow view "$GITHUB_WORKFLOW" | head -1 | cut -d ' ' -f 3
      - run: gh workflow view "$GITHUB_WORKFLOW" | head -2 | tail -1 | cut -d ' ' -f 2
      - run: gh workflow view "$GITHUB_WORKFLOW" --yaml | tee workflow.yml
      - run: yq '.on.workflow_dispatch.inputs.id.default' workflow.yml
      - run: |
          minutes=$(yq '.jobs.build.timeout-minutes' workflow.yml)
          echo "::set-output name=minutes::${minutes}"
        id: timeout
      - run: |
          echo $TIMEOUT_MINUTES
          echo $((TIMEOUT_MINUTES ** 60))
          echo $((TIMEOUT_MINUTES * 60))
          date '+%s'
        env:
          TIMEOUT_MINUTES: ${{ steps.timeout.outputs.minutes }}
#       - run: gh run view $GITHUB_RUN_ID --json createdAt,updatedAt
#       - run: gh run view $GITHUB_RUN_ID --json createdAt,updatedAt --jq '.createdAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime'
#       - run: gh run view $GITHUB_RUN_ID --json createdAt,updatedAt --jq '(.updatedAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) - (.createdAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime)'
      - run: sleep 30
      - run: sleep 30
      - run: |
          echo cancelled
          gh run view $GITHUB_RUN_ID
          if gh run view $GITHUB_RUN_ID | grep 'The run was canceled by'; then
            echo "This is manually cancel."
          fi
          if gh run view $GITHUB_RUN_ID | grep 'has exceeded the maximum execution time of'; then
            echo "This is timed out."
          fi
        if: cancelled()
      - run: |
          echo cancelled
          echo $JOB
          echo $STEPS
          createdAt=$(gh run view $GITHUB_RUN_ID --json createdAt,updatedAt \
            --jq '.createdAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime')
          echo $createdAt
          echo $((TIMEOUT_MINUTES * 60))
          date '+%s'
          now=$(date '+%s')
          if ((now >= createdAt + TIMEOUT_MINUTES * 60)); then
            echo "This is timed-out."
          fi
        env:
          TIMEOUT_MINUTES: ${{ steps.timeout.outputs.minutes }}
          JOB: ${{ toJSON(job) }}
          STEPS: ${{ toJSON(steps) }}
        if: cancelled() && false
      - run: |
          echo cancelled
          seconds=$(gh run view $GITHUB_RUN_ID --json createdAt,updatedAt \
            --jq '(.updatedAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) - (.createdAt | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime)')
          echo $seconds
          echo $((TIMEOUT_MINUTES * 60))
          if ((seconds >= TIMEOUT_MINUTES * 60)); then
            echo "This is timed-out."
          fi
        env:
          TIMEOUT_MINUTES: ${{ steps.timeout.outputs.minutes }}
        if: cancelled() && false
