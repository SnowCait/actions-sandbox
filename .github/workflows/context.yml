name: Context

on:
  push:
    paths:
      - .github/workflows/context.yml

jobs:
  github:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - run: cat $GITHUB_EVENT_PATH
      - name: Full Name (Owner/Repository)
        run: echo "${GITHUB_REPOSITORY}"
      - name: Owner name
        run: echo "${GITHUB_REPOSITORY_OWNER}"
      - name: Repository name
        run: echo "${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}"
      - name: Repository name
        run: |
          repository=(${GITHUB_REPOSITORY/\// })
          echo ${repository[1]}
      - name: Repository URL
        run: echo ${GITHUB_REPOSITORYURL}

      - name: Full Name (Owner/Repository)
        run: echo ${{ github.repository }}
      - name: Owner name
        run: echo ${{ github.repository_owner }}
      - id: repository
        run: echo "::set-output name=name::${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}"
      - name: Repository name
        run: echo ${{ steps.repository.outputs.name }}
      - run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV
      - name: Repository name
        run: echo ${{ env.REPOSITORY_NAME }}
      - name: Repository URL
        run: echo ${{ github.repositoryUrl }}

      - run: echo "${RUNNER_OS}"

  steps:
    if: false
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - run: cat $GITHUB_EVENT_PATH
        id: success
      - name: success result
        run: |
          echo $conclusion # success
          echo $outcome # success
        env:
          conclusion: ${{ steps.success.conclusion }}
          outcome: ${{ steps.success.outcome }}
      - run: exit 1
        id: continue
        continue-on-error: true
      - name: continue result
        run: |
          echo $conclusion # success
          echo $outcome # failure
        env:
          conclusion: ${{ steps.continue.conclusion }}
          outcome: ${{ steps.continue.outcome }}
      - run: exit 1
        id: failure
      - name: continue result
        run: |
          echo $conclusion # failure
          echo $outcome # failure
        env:
          conclusion: ${{ steps.failure.conclusion }}
          outcome: ${{ steps.failure.outcome }}
        if: failure()
        
