name: Bug

on:
  push:
    paths:
      - .github/workflows/bug.yml

env:
  GH_TOKEN: ${{ github.token }}
  MILESTONE: milestone1

jobs:
  gh-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Create a milestone
        run: gh api -X POST repos/${GITHUB_REPOSITORY}/milestones -f title=${MILESTONE}
      - name: Close the milestone
        run: |
          milestone_number=$(gh api -X GET /repos/${GITHUB_REPOSITORY}/milestones --jq ". | map(select(.title == \"${MILESTONE}\")) | first | .number")
          gh api -X PATCH repos/${GITHUB_REPOSITORY}/milestones/${milestone_number} -f state=closed
      - uses: actions/checkout@v3
      - name: Commit something
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git switch -c milestone-test
          echo "test" > test
          git add .
          git commit -m "milestone test"
          git push origin milestone-test
      - run: gh pr create --base ${GITHUB_REF} --head milestone-test --title "milestone test" --body "" --milestone "${MILESTONE}"
      - run: gh api -X GET /repos/${GITHUB_REPOSITORY}/milestones -f state=all --jq ". | map(select(.title == \"${MILESTONE}\"))"
        if: failure()
      - name: Cleanup
        run: |
          milestone_number=$(gh api -X GET /repos/${GITHUB_REPOSITORY}/milestones -f state=all --jq ". | map(select(.title == \"${MILESTONE}\")) | first | .number")
          gh api -X DELETE repos/${GITHUB_REPOSITORY}/milestones/${milestone_number}
          gh api -X DELETE repos/${GITHUB_REPOSITORY}/git/refs/heads/milestone-test
        if: always()
