name: CI

on:
  pull_request:

jobs:
  paths:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    outputs:
      client: ${{ steps.changes.outputs.client == 'true || steps.changes.outputs.ci == 'true' }}
      server: ${{ steps.changes.outputs.server == 'true || steps.changes.outputs.ci == 'true' }}

    steps:
      - run: cat $GITHUB_EVENT_PATH
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'
            ci:
              - '.github/workflows/ci.yml'

  client-lint:
    needs: [ paths ]
    if: needs.paths.outputs.client == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: client

    steps:
      - uses: actions/checkout@v3
      - run: sh build.sh

  client-test:
    needs: [ paths ]
    if: needs.paths.outputs.client == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: client

    steps:
      - uses: actions/checkout@v3
      - run: sh build.sh
      - run: sh test.sh

  server-test:
    needs: [ paths ]
    if: needs.paths.outputs.server == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: server

    steps:
      - uses: actions/checkout@v3
      - run: sh test.sh

  # Required status checks and Notification
  passing:
    needs:
      - client-lint
      - client-test
      - server-test
    if: failure() == false && contains(needs.*.result, 'cancelled') == false
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    env:
      GH_TOKEN: ${{ github.token }}
      GH_REPO: ${{ github.repository }}

    steps:
      - run: echo "$json"
        env:
          json: ${{ toJSON(needs) }}
      - run: gh pr comment $number --body "@${author} CI passing"
        env:
          number: ${{ github.event.number }}
          author: ${{ github.actor }}

  # Required status checks and Notification
  passing-always:
    needs:
      - client-lint
      - client-test
      - server-test
    if: always()
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    env:
      GH_TOKEN: ${{ github.token }}
      GH_REPO: ${{ github.repository }}

    steps:
      - run: echo "$json"
        env:
          json: ${{ toJSON(needs) }}
      - name: Success or Skipped
        run: gh pr comment $number --body "@${author} CI passing at ${sha}"
        env:
          number: ${{ github.event.number }}
          sha: ${{ github.event.pull_request.head.sha }}
          author: ${{ github.actor }}
        if: contains(needs.*.result, 'failure') == false && contains(needs.*.result, 'cancelled') == false
      - name: Failure or Cancelled
        run: |
          echo '[failure]'
          echo "$needs" | jq -r 'to_entries | map(select(.value.result == "failure")) | .[].key'
          echo '----------'
          echo '[cancelled]'
          echo "$needs" | jq -r 'to_entries | map(select(.value.result == "cancelled")) | .[].key'
          echo '----------'
          gh pr comment $number --body "@${author} CI failure at ${sha}"
          exit 1
        env:
          number: ${{ github.event.number }}
          sha: ${{ github.event.pull_request.head.sha }}
          author: ${{ github.actor }}
          needs: ${{ toJSON(needs) }}
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')

  post:
    needs: [ passing ]
    if: failure() == false
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    steps:
      - run: echo 'Run post script'
