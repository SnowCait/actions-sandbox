name: CI

on:
  pull_request:

jobs:
  paths:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    outputs:
      client: ${{ steps.changes.outputs.client }}
      server: ${{ steps.changes.outputs.server }}

    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'

  build-client:
    needs: [ paths ]
    if: needs.paths.outputs.client == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: client

    steps:
      - uses: actions/checkout@v3
      - run: sleep 2m
      - run: sh build.sh

  test-client:
    needs: [ paths ]
    if: needs.paths.outputs.client == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: client

    steps:
      - uses: actions/checkout@v3
      - run: sh test.sh

  test-server:
    needs: [ paths ]
    if: needs.paths.outputs.server == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    defaults:
      run:
        working-directory: server

    steps:
      - uses: actions/checkout@v3
      - run: sh test.sh

  passing:
    needs: [ build-client, test-client, test-server ]
    if: failure() == false
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    steps:
      - run: echo "$json"
        env:
          json: ${{ toJSON(needs) }}
      - run: echo 'Notify somewhere.'
